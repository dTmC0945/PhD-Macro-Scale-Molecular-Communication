function [T_Prob] = decodingTheory2D(levelCounter,Es_N0)
    
    T_Prob          = zeros(levelCounter^2, levelCounter^2);
    mu_m            = zeros(levelCounter^2 ,2);

    i = 1;  normalization = 1.219877889386052;
    
    for a = 1:1:levelCounter
        for b = 1:1:levelCounter
            mu_m(i,:) = ([2*b 2*a]- (levelCounter + 1))/normalization;
            i = i + 1;
        end
    end

    min = (-levelCounter + 1)/normalization;  mu_x = mu_m(:,1);
    max = (+levelCounter - 1)/normalization;  mu_y = mu_m(:,2);

    cov_matrix = [1 0;0 1]*10^(-Es_N0/10)/2;

    for a = 1:1:levelCounter^2

        for b = 1:1:levelCounter^2  
            
            if mu_x(b) > min ...                    % Inner Cases
            && mu_x(b) < max ...
            && mu_y(b) < max ...
            && mu_y(b) > min  
                
                T_Prob(a,b) =  mvncdf([mu_x(b) - 1/normalization , ...
                                       mu_y(b) - 1/normalization], ...
                                      [mu_x(b) + 1/normalization , ...
                                       mu_y(b) + 1/normalization], ...
                                      [mu_m(a,1) mu_m(a,2)], ...
                                      cov_matrix);

            elseif  mu_x(b) == min ...
                 && mu_y(b) == min         % Corner Cases
                 T_Prob(a,b) = mvncdf([-10000, -10000], ...
                                      [min + 1/normalization,min + 1/normalization],...
                                      [mu_x(a) mu_y(a)],...
                                       cov_matrix);
            elseif  mu_x(b) == max ...
                 && mu_y(b) == min
                 T_Prob(a,b) = mvncdf([max-1/normalization,...
                     -10000],...
                     [10000, ...
                     min+1/normalization]...
                     ,[mu_x(a) mu_y(a)],...
                     cov_matrix);
            elseif  mu_x(b) == min ...
                 && mu_y(b) == max
                 T_Prob(a,b) = mvncdf([-10000, max-1/normalization],[min+1/normalization,  10000],[mu_x(a) mu_y(a)],cov_matrix); 
            elseif  mu_x(b) == max ...
                 && mu_y(b) == max
                 T_Prob(a,b) = mvncdf([max-1/normalization, max-1/normalization],[10000,   10000],[mu_x(a) mu_y(a)],cov_matrix);  
            elseif  mu_x(b) == min ...
                 && mu_y(b) <  max ...
                 && mu_y(b) >  min  % Edge Cases
                T_Prob(a,b) = mvncdf([-10000, mu_y(b)-1/normalization],[mu_x(b)+1/normalization, mu_y(b)+1/normalization],[mu_x(a) mu_y(a)],cov_matrix);
            elseif  mu_x(b) == max ...
                 && mu_y(b) <  max ...
                 && mu_y(b) >  min
                T_Prob(a,b) = mvncdf([mu_x(b)-1/normalization,  mu_y(b)-1/normalization],[10000, mu_y(b)+1/normalization],[mu_x(a) mu_y(a)],cov_matrix);         
            elseif  mu_y(b) == min ...
                 && mu_x(b) <  max ...
                 && mu_x(b) >  min
                T_Prob(a,b) = mvncdf([mu_x(b)-1/normalization,  -10000],[mu_x(b)+1/normalization, mu_y(b)+1/normalization],[mu_x(a) mu_y(a)],cov_matrix);
            elseif  mu_y(b) == max ...
                 && mu_x(b) <  max ...
                 && mu_x(b) >  min
                T_Prob(a,b) = mvncdf([mu_x(b)-1/normalization, mu_y(b)-1/normalization],[mu_x(b)+1/normalization, 10000],[mu_x(a) mu_y(a)],cov_matrix);
            end
        end
    end  

end